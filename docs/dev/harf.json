<h1 id='92f5faa2a5'>حرف</h1>
<p>سامانه حرف با شنیدن هزاران ساعت گفتار با صدای افراد مختلف، زبان فارسی را یاد گرفته است و می‌تواند متن صحبت‌ها را بنویسد.</p>

<p>برای دسترسی به واسط برنامه‌نویس حرف نیاز به یک TOKEN_KEY معتبر دارید که برای احراز هویت استفاده می‌شود. لطفا برای آزمایش سامانه، این متغیر را در تقاضاهای نمونه، جای‌گذاری کنید. سوال هم اگر دارید، لطفا برای آدرس harf@roshan-ai.ir بنویسید.</p>
<h1 id='12ec36d0e6'>پیاده‌سازی متن فایل</h1>
<table>
    <tr>
        <th>
            title
        </th>
        <th>
            description
        </th>
        <th>
            key
        </th>
        <th>
            value
        </th>
        <th>
            required
        </th>
    </tr></table>

<p>این تابع، فایل‌های صدا یا ویدئو را دریافت می‌کند و متن آن‌ها را به صورت JSON باز می‌گرداند. خروجی ابزار تبدیل گفتار به متن، در قالب بازه‌های زمانی کوتاه ارائه می‌شود که متن هر کدام از این بازه‌ها مشخص شده است.</p>
<h2 id='706cb61ff0'>نمونه ارسال با لینک</h2>
<blockquote>
<p>Request</p>
</blockquote>
<div class="highlight"><pre class="highlight plaintext tab-plaintext"><code>{
    "media_urls": [
        "https://i.ganjoor.net/a2/41417.mp3"
    ]
}
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl  <span class="nt">--request</span> POST <span class="se">\ </span>
      <span class="nt">--header</span> <span class="s2">"Content-Type: application/json"</span> <span class="nt">--header</span> <span class="s2">"Authorization: Token TOKEN_KEY"</span> <span class="se">\</span>
      <span class="nt">--data-binary</span> <span class="o">{</span>
    <span class="s2">"media_urls"</span>: <span class="o">[</span>
        <span class="s2">"https://i.ganjoor.net/a2/41417.mp3"</span>
    <span class="o">]</span>
<span class="o">}</span> <span class="se">\</span>
      http://harf.roshan-ai.ir/api/transcribe_files/
</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">from</span> <span class="nn">urllib2</span> <span class="kn">import</span> <span class="n">Request</span><span class="p">,</span> <span class="n">urlopen</span>

<span class="n">values</span> <span class="o">=</span> <span class="s">"""
{
    "media_urls": [
        "https://i.ganjoor.net/a2/41417.mp3"
    ]
}
"""</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'application/json'</span><span class="p">,</span><span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Token TOKEN_KEY'</span><span class="p">,</span>
<span class="p">}</span>
<span class="n">request</span> <span class="o">=</span> <span class="n">Request</span><span class="p">(</span><span class="s">'http://harf.roshan-ai.ir/api/transcribe_files/'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">values</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="n">response_body</span> <span class="o">=</span> <span class="n">urlopen</span><span class="p">(</span><span class="n">request</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">response_body</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight java tab-java"><code><span class="kn">import</span> <span class="nn">java.lang.System</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.HttpURLConnection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.charset.StandardCharsets</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URLConnection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">MyRequest</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="no">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="o">);</span>
            <span class="nc">URLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
            <span class="nc">HttpURLConnection</span> <span class="n">http</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span><span class="n">con</span><span class="o">;</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"POST"</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setDoOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

            <span class="kt">byte</span><span class="o">[]</span> <span class="n">out</span> <span class="o">=</span> <span class="s">"{
    "</span><span class="n">media_urls</span><span class="s">": [
        "</span><span class="nl">https:</span><span class="c1">//i.ganjoor.net/a2/41417.mp3"</span>
    <span class="o">]</span>
<span class="o">}</span><span class="s">".getBytes(StandardCharsets.UTF_8);
            int length = out.length;

            http.setFixedLengthStreamingMode(length);
            http.setRequestProperty("</span><span class="nc">Content</span><span class="o">-</span><span class="nc">Type</span><span class="s">", "</span><span class="n">application</span><span class="o">/</span><span class="n">json</span><span class="s">");
            http.setRequestProperty("</span><span class="nc">Authorization</span><span class="s">", "</span><span class="nc">Token</span> <span class="no">TOKEN_KEY</span><span class="err">"</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
            <span class="k">try</span><span class="o">(</span><span class="nc">OutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="n">http</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">out</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="n">http</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
            <span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
            <span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
            <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>

  <span class="nv">$url</span> <span class="o">=</span> <span class="s2">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="p">;</span>
  <span class="nv">$content</span> <span class="o">=</span> <span class="nb">json_encode</span><span class="p">(</span>
      <span class="s1">'{
    "media_urls": [
        "https://i.ganjoor.net/a2/41417.mp3"
    ]
}'</span><span class="p">);</span>
  <span class="nv">$curl</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">(</span><span class="nv">$url</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_HEADER</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_HTTPHEADER</span><span class="p">,</span>
          <span class="k">array</span><span class="p">(</span>
              <span class="s2">"Content-Type: application/json"</span><span class="p">,</span>
              <span class="s2">"Authorization: Token TOKEN_KEY"</span><span class="p">,</span>
              <span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_POST</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nv">$content</span><span class="p">);</span>

  <span class="nv">$json_response</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

  <span class="nv">$status</span> <span class="o">=</span> <span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLINFO_HTTP_CODE</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(</span> <span class="nv">$status</span> <span class="o">!=</span> <span class="mi">200</span> <span class="p">)</span> <span class="p">{</span>
      <span class="k">die</span><span class="p">(</span><span class="s2">"Error: call to URL </span><span class="nv">$url</span><span class="s2"> failed with status </span><span class="nv">$status</span><span class="s2">, response </span><span class="nv">$json_response</span><span class="s2">, curl_error "</span> <span class="mf">.</span> <span class="nb">curl_error</span><span class="p">(</span><span class="nv">$curl</span><span class="p">)</span> <span class="mf">.</span> <span class="s2">", curl_errno "</span> <span class="mf">.</span> <span class="nb">curl_errno</span><span class="p">(</span><span class="nv">$curl</span><span class="p">));</span>
  <span class="p">}</span>


  <span class="nb">curl_close</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

  <span class="nv">$response</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$json_response</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div><div class="highlight"><pre class="highlight csharp tab-csharp"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MyRequest</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">Program</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">httpWebRequest</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebRequest</span><span class="p">)</span><span class="n">WebRequest</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="p">);</span>
            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">"Content-Type"</span><span class="p">]=</span> <span class="s">"application/json"</span><span class="p">;</span>
            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">"Authorization"</span><span class="p">]=</span> <span class="s">"Token TOKEN_KEY"</span><span class="p">;</span>

            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="s">"POST"</span><span class="p">;</span>

            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">streamWriter</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamWriter</span><span class="p">(</span><span class="n">httpWebRequest</span><span class="p">.</span><span class="nf">GetRequestStream</span><span class="p">()))</span>
            <span class="p">{</span>
                <span class="kt">string</span> <span class="n">json</span> <span class="p">=</span> <span class="s">"{
</span>    <span class="s">"media_urls"</span><span class="p">:</span> <span class="p">[</span>
        <span class="s">"https://i.ganjoor.net/a2/41417.mp3"</span>
    <span class="p">]</span>
<span class="p">}</span><span class="s">";
</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">json</span><span class="p">);</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Flush</span><span class="p">();</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Close</span><span class="p">();</span>
            <span class="p">}</span>

            <span class="kt">var</span> <span class="n">httpResponse</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">httpWebRequest</span><span class="p">.</span><span class="nf">GetResponse</span><span class="p">();</span>
            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">streamReader</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">httpResponse</span><span class="p">.</span><span class="nf">GetResponseStream</span><span class="p">()))</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="n">streamReader</span><span class="p">.</span><span class="nf">ReadToEnd</span><span class="p">();</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">result</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Response </p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"media_url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://i.ganjoor.net/a2/41417.mp3"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"duration"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:44"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"segments"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:00"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:02"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"حکایت"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:02"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:06"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"یکی را از حکما شنیدم که می گفت"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:06"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:11"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"هرگز کسی به جهل خویش اقرار نکرده است"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:11"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:16"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"مگر آن کس که چون دیگری در سخن باشد"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:16"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:21"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"همچنان ناتمام گفته سخن آغاز کند"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="err">...</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">

</span></code></pre></div>
<p><code>POST /api/transcribe_files/</code></p>

<dl>
<strong>media_urls(required)</strong>
<br>
<br>
Value: <span style="background-color: #00A693;
                    border-color: #00A693;
                    border-width: 3px;
                    border-radius: 2px">
                    List of URLs
                    </span>
</dl>

<p style="direction:rtl;font-weight:300;">
<img src="./images/vector.svg" alt="vector">  لیست آدرس فایل‌های ورودی</p>

<p><br><br></p>
<h2 id='d29539880b'>نمونه ارسال مستقیم فایل</h2>
<blockquote>
<p>Request</p>
</blockquote>
<div class="highlight"><pre class="highlight plaintext tab-plaintext"><code>"--{boundary value}\nContent-Disposition: form-data; name='document'; filename='FILE NAME'\nContent-Type: text/plain (according to the type of the uploaded file)\n\n{file content}\n--{boundary value}\n"
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl <span class="nt">-X</span>
      POST <span class="nt">--header</span> <span class="s2">"Authorization: Token TOKEN_KEY"</span>
      <span class="nt">-F</span> <span class="s2">"document=@example.pdf"</span>
      http://alefba.roshan-ai.ir/api/read_document
</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Token TOKEN_KEY'</span><span class="p">,}</span>
<span class="n">files</span> <span class="o">=</span> <span class="p">{</span><span class="s">'document'</span><span class="p">:</span> <span class="p">(</span><span class="s">'FILE NAME'</span><span class="p">,</span> <span class="nb">open</span><span class="p">(</span><span class="s">'YOUR FILE PATH'</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">)),}</span>
<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="s">'https://alefba.roshan-ai.ir/api/read_document/'</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">,</span> <span class="n">files</span><span class="o">=</span><span class="n">files</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight java tab-java"><code><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.file.Files</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MultiPartRequest</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>

    <span class="nc">String</span> <span class="n">url</span> <span class="o">=</span> <span class="s">"https://alefba.roshan-ai.ir/api/read_document/"</span><span class="o">;</span>
    <span class="nc">File</span> <span class="n">textFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"YOUR FILE PATH"</span><span class="o">);</span>
    <span class="nc">String</span> <span class="n">boundary</span> <span class="o">=</span> <span class="nc">Long</span><span class="o">.</span><span class="na">toHexString</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">());</span>
    <span class="nc">String</span> <span class="no">CRLF</span> <span class="o">=</span> <span class="s">"\r\n"</span><span class="o">;</span>

    <span class="nc">URLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="n">url</span><span class="o">).</span><span class="na">openConnection</span><span class="o">();</span>
    <span class="n">connection</span><span class="o">.</span><span class="na">setDoOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"accept"</span><span class="o">,</span> <span class="s">"*/*"</span><span class="o">);</span>
    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"Connection"</span><span class="o">,</span> <span class="s">"close"</span><span class="o">);</span>
    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"Token TOKEN_KEY"</span><span class="o">);</span>
    <span class="n">connection</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"multipart/form-data; boundary="</span> <span class="o">+</span> <span class="n">boundary</span><span class="o">);</span>

    <span class="k">try</span> <span class="o">(</span>
        <span class="nc">OutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
        <span class="nc">PrintWriter</span> <span class="n">writer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PrintWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="n">output</span><span class="o">),</span> <span class="kc">true</span><span class="o">);</span>
    <span class="o">)</span> <span class="o">{</span>
      <span class="n">writer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"--"</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">boundary</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="no">CRLF</span><span class="o">);</span>
      <span class="n">writer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"Content-Disposition: form-data; name=\"document\"; filename=\""</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">textFile</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">"\""</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="no">CRLF</span><span class="o">);</span>
      <span class="n">writer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"Content-Type: application/pdf"</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="no">CRLF</span><span class="o">);</span>
      <span class="n">writer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="no">CRLF</span><span class="o">).</span><span class="na">flush</span><span class="o">();</span>
      <span class="nc">Files</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">textFile</span><span class="o">.</span><span class="na">toPath</span><span class="o">(),</span> <span class="n">output</span><span class="o">);</span>
      <span class="n">output</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
      <span class="n">writer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="no">CRLF</span><span class="o">).</span><span class="na">flush</span><span class="o">();</span>
      <span class="n">writer</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"--"</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">boundary</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">"--"</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="no">CRLF</span><span class="o">).</span><span class="na">flush</span><span class="o">();</span>
    <span class="o">}</span>


    <span class="nc">BufferedReader</span> <span class="n">inputStream</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">((</span><span class="nc">InputStream</span><span class="o">)</span> <span class="n">connection</span><span class="o">.</span><span class="na">getContent</span><span class="o">()));</span>
    <span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
    <span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">inputStream</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="n">inputStream</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="nv">$fields</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">"f1"</span><span class="o">=&gt;</span><span class="s2">"value1"</span><span class="p">,</span> <span class="s2">"another_field2"</span><span class="o">=&gt;</span><span class="s2">"anothervalue"</span><span class="p">);</span>

<span class="nv">$filenames</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">"FILE_PATH_1"</span><span class="p">,</span> <span class="s2">"FILE_PATH_2"</span><span class="p">);</span>

<span class="nv">$files</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
<span class="k">foreach</span> <span class="p">(</span><span class="nv">$filenames</span> <span class="k">as</span> <span class="nv">$f</span><span class="p">){</span>
   <span class="nv">$files</span><span class="p">[</span><span class="nv">$f</span><span class="p">]</span> <span class="o">=</span> <span class="nb">file_get_contents</span><span class="p">(</span><span class="nv">$f</span><span class="p">);</span>
<span class="p">}</span>

<span class="nv">$url</span> <span class="o">=</span> <span class="s2">"https://alefba.roshan-ai.ir/api/read_document/"</span><span class="p">;</span>

<span class="nv">$curl</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">();</span>

<span class="nv">$url_data</span> <span class="o">=</span> <span class="nb">http_build_query</span><span class="p">(</span><span class="nv">$data</span><span class="p">);</span>

<span class="nv">$boundary</span> <span class="o">=</span> <span class="nb">uniqid</span><span class="p">();</span>
<span class="nv">$delimiter</span> <span class="o">=</span> <span class="s1">'-------------'</span> <span class="mf">.</span> <span class="nv">$boundary</span><span class="p">;</span>

<span class="nv">$post_data</span> <span class="o">=</span> <span class="nf">build_data_files</span><span class="p">(</span><span class="nv">$boundary</span><span class="p">,</span> <span class="nv">$fields</span><span class="p">,</span> <span class="nv">$files</span><span class="p">);</span>

<span class="nb">curl_setopt_array</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
  <span class="no">CURLOPT_URL</span> <span class="o">=&gt;</span> <span class="nv">$url</span><span class="p">,</span>
  <span class="no">CURLOPT_RETURNTRANSFER</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
  <span class="no">CURLOPT_MAXREDIRS</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span>
  <span class="no">CURLOPT_TIMEOUT</span> <span class="o">=&gt;</span> <span class="mi">30</span><span class="p">,</span>
  <span class="no">CURLOPT_HTTP_VERSION</span> <span class="o">=&gt;</span> <span class="no">CURL_HTTP_VERSION_1_1</span><span class="p">,</span>
  <span class="no">CURLOPT_CUSTOMREQUEST</span> <span class="o">=&gt;</span> <span class="s2">"POST"</span><span class="p">,</span>
  <span class="no">CURLOPT_POST</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
  <span class="no">CURLOPT_POSTFIELDS</span> <span class="o">=&gt;</span> <span class="nv">$post_data</span><span class="p">,</span>
  <span class="no">CURLOPT_HTTPHEADER</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s2">"Authorization: Bearer </span><span class="nv">$TOKEN</span><span class="s2">"</span><span class="p">,</span>
    <span class="s2">"Content-Type: multipart/form-data; boundary="</span> <span class="mf">.</span> <span class="nv">$delimiter</span><span class="p">,</span>
  <span class="p">),</span>
<span class="p">));</span>

<span class="nv">$response</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

<span class="nv">$info</span> <span class="o">=</span> <span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$response</span><span class="p">);</span>
<span class="nv">$err</span> <span class="o">=</span> <span class="nb">curl_error</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>
<span class="k">echo</span> <span class="s2">"error"</span><span class="p">;</span>
<span class="nb">var_dump</span><span class="p">(</span><span class="nv">$err</span><span class="p">);</span>
<span class="nb">curl_close</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

<span class="k">function</span> <span class="n">build_data_files</span><span class="p">(</span><span class="nv">$boundary</span><span class="p">,</span> <span class="nv">$fields</span><span class="p">,</span> <span class="nv">$files</span><span class="p">){</span>
    <span class="nv">$data</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
    <span class="nv">$eol</span> <span class="o">=</span> <span class="s2">"</span><span class="se">\r\n</span><span class="s2">"</span><span class="p">;</span>
    <span class="nv">$delimiter</span> <span class="o">=</span> <span class="s1">'-------------'</span> <span class="mf">.</span> <span class="nv">$boundary</span><span class="p">;</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$fields</span> <span class="k">as</span> <span class="nv">$name</span> <span class="o">=&gt;</span> <span class="nv">$content</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$data</span> <span class="mf">.</span><span class="o">=</span> <span class="s2">"--"</span> <span class="mf">.</span> <span class="nv">$delimiter</span> <span class="mf">.</span> <span class="nv">$eol</span>
            <span class="mf">.</span> <span class="s1">'Content-Disposition: form-data; name="'</span> <span class="mf">.</span> <span class="nv">$name</span> <span class="mf">.</span> <span class="s2">"</span><span class="se">\"</span><span class="s2">"</span><span class="mf">.</span><span class="nv">$eol</span><span class="mf">.</span><span class="nv">$eol</span>
            <span class="mf">.</span> <span class="nv">$content</span> <span class="mf">.</span> <span class="nv">$eol</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$files</span> <span class="k">as</span> <span class="nv">$name</span> <span class="o">=&gt;</span> <span class="nv">$content</span><span class="p">)</span> <span class="p">{</span>
        <span class="nv">$data</span> <span class="mf">.</span><span class="o">=</span> <span class="s2">"--"</span> <span class="mf">.</span> <span class="nv">$delimiter</span> <span class="mf">.</span> <span class="nv">$eol</span>
            <span class="mf">.</span> <span class="s1">'Content-Disposition: form-data; name="'</span> <span class="mf">.</span> <span class="nv">$name</span> <span class="mf">.</span> <span class="s1">'"; filename="'</span> <span class="mf">.</span> <span class="nv">$name</span> <span class="mf">.</span> <span class="s1">'"'</span> <span class="mf">.</span> <span class="nv">$eol</span>
            <span class="mf">.</span> <span class="s1">'Content-Type: image/png'</span><span class="mf">.</span><span class="nv">$eol</span>
            <span class="mf">.</span> <span class="s1">'Content-Transfer-Encoding: binary'</span><span class="mf">.</span><span class="nv">$eol</span>
            <span class="p">;</span>
        <span class="nv">$data</span> <span class="mf">.</span><span class="o">=</span> <span class="nv">$eol</span><span class="p">;</span>
        <span class="nv">$data</span> <span class="mf">.</span><span class="o">=</span> <span class="nv">$content</span> <span class="mf">.</span> <span class="nv">$eol</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nv">$data</span> <span class="mf">.</span><span class="o">=</span> <span class="s2">"--"</span> <span class="mf">.</span> <span class="nv">$delimiter</span> <span class="mf">.</span> <span class="s2">"--"</span><span class="mf">.</span><span class="nv">$eol</span><span class="p">;</span>
    <span class="k">return</span> <span class="nv">$data</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><div class="highlight"><pre class="highlight csharp tab-csharp"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net.Http</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net.Http.Headers</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MyRequest</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">Program</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="k">async</span> <span class="k">void</span> <span class="nf">UploadFile</span><span class="p">(</span><span class="n">String</span> <span class="n">serverAddress</span><span class="p">,</span><span class="n">String</span> <span class="n">filePath</span><span class="p">,</span><span class="n">String</span><span class="p">[]</span> <span class="n">paramsName</span><span class="p">,</span><span class="n">String</span><span class="p">[]</span> <span class="n">paramsValue</span><span class="p">){</span>
            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">formData</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MultipartFormDataContent</span><span class="p">()){</span>
                <span class="n">formData</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span><span class="p">.</span><span class="n">MediaType</span> <span class="p">=</span> <span class="s">"multipart/form-data"</span><span class="p">;</span>
                <span class="kt">var</span> <span class="n">filestream</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">FileStream</span><span class="p">(</span><span class="n">filePath</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Open</span><span class="p">);</span>
                <span class="n">Stream</span> <span class="n">fileStream</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">File</span><span class="p">.</span><span class="nf">OpenRead</span><span class="p">(</span><span class="n">filePath</span><span class="p">);</span>
                <span class="kt">var</span> <span class="n">fileName</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">Path</span><span class="p">.</span><span class="nf">GetFileName</span><span class="p">(</span><span class="n">filePath</span><span class="p">);</span>

                <span class="n">formData</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentDisposition</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">ContentDispositionHeaderValue</span><span class="p">(</span><span class="s">"attachment"</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">FileName</span> <span class="p">=</span> <span class="n">fileName</span>
                <span class="p">};</span>

                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span><span class="n">i</span><span class="p">&lt;</span><span class="n">paramsName</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span><span class="n">i</span><span class="p">++){</span>
                    <span class="kt">var</span> <span class="n">stringContent</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringContent</span><span class="p">(</span><span class="n">paramsValue</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
                    <span class="n">stringContent</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Content-Disposition"</span><span class="p">,</span> <span class="s">"form-data; name=\""</span> <span class="p">+</span> <span class="n">paramsName</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">+</span> <span class="s">"\""</span><span class="p">);</span>
                    <span class="n">formData</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">stringContent</span><span class="p">,</span> <span class="n">paramsName</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
                <span class="p">}</span>

                <span class="n">formData</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">StreamContent</span><span class="p">(</span><span class="n">fileStream</span><span class="p">),</span> <span class="s">"file"</span><span class="p">,</span> <span class="n">filename</span><span class="p">);</span>

                <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">client</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpClient</span><span class="p">()){</span>
                    <span class="n">client</span><span class="p">.</span><span class="n">DefaultRequestHeaders</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Authorization"</span><span class="p">,</span> <span class="s">"Token"</span> <span class="p">+</span> <span class="n">_bearerToken</span><span class="p">);</span>

                    <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">client</span><span class="p">.</span><span class="nf">PostAsync</span><span class="p">(</span><span class="n">serverAddress</span><span class="p">,</span> <span class="n">formData</span><span class="p">).</span><span class="n">Result</span><span class="p">;</span>
                    <span class="k">return</span> <span class="n">response</span><span class="p">.</span><span class="nf">ToString</span><span class="p">();</span>

                    <span class="kt">var</span> <span class="n">message</span> <span class="p">=</span> <span class="k">await</span> <span class="n">client</span><span class="p">.</span><span class="nf">PostAsync</span><span class="p">(</span><span class="n">serverAddress</span><span class="p">,</span> <span class="n">formData</span><span class="p">);</span>
                    <span class="n">result</span> <span class="p">=</span> <span class="k">await</span> <span class="n">message</span><span class="p">.</span><span class="n">Content</span><span class="p">.</span><span class="nf">ReadAsStringAsync</span><span class="p">();</span>
                    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Response </p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"media_url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://harf.roshan-ai.ir/media/files/96/84/859267728361.mp3"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"duration"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:44"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"segments"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:00"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:02"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"حکایت"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:02"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:06"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"یکی را از حکما شنیدم که می گفت"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:06"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:11"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"هرگز کسی به جهل خویش اقرار نکرده است"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:11"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:16"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"مگر آن کس که چون دیگری در سخن باشد"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:16"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0:00:21"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"text"</span><span class="p">:</span><span class="w"> </span><span class="s2">"همچنان ناتمام گفته سخن آغاز کند"</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="err">...</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">

</span></code></pre></div>
<p><code>POST /api/transcribe_files/</code></p>

<dl>
<strong>media(required)</strong>
<br>
<br>
Value: <span style="background-color: #00A693;
                    border-color: #00A693;
                    border-width: 3px;
                    border-radius: 2px">
                    file in binary
                    </span>
</dl>

<p style="direction:rtl;font-weight:300;">
<img src="./images/vector.svg" alt="vector">  فایل سند ورودی</p>

<p><br><br></p>
<h1 id='ad82489934'>پیاده‌سازی متن فایل ناهمگام</h1>
<table>
    <tr>
        <th>
            title
        </th>
        <th>
            description
        </th>
        <th>
            key
        </th>
        <th>
            value
        </th>
        <th>
            required
        </th>
    </tr></table>

<p>در این بخش نحوه تحلیل فایل به صورت ناهمگام، توضیح داده شده است.</p>
<h2 id='0bbf1f7038'>نمونه ارسال درخواست ناهمگام</h2>
<blockquote>
<p>Request</p>
</blockquote>
<div class="highlight"><pre class="highlight plaintext tab-plaintext"><code>{
    "media_urls": [
        "https://i.ganjoor.net/a2/41417.mp3"
    ],
    "wait": false
}
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl  <span class="nt">--request</span> POST <span class="se">\ </span>
      <span class="nt">--header</span> <span class="s2">"Content-Type: application/json"</span> <span class="nt">--header</span> <span class="s2">"Authorization: Token TOKEN_KEY"</span> <span class="se">\</span>
      <span class="nt">--data-binary</span> <span class="o">{</span>
    <span class="s2">"media_urls"</span>: <span class="o">[</span>
        <span class="s2">"https://i.ganjoor.net/a2/41417.mp3"</span>
    <span class="o">]</span>,
    <span class="s2">"wait"</span>: <span class="nb">false</span>
<span class="o">}</span> <span class="se">\</span>
      http://harf.roshan-ai.ir/api/transcribe_files/
</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">from</span> <span class="nn">urllib2</span> <span class="kn">import</span> <span class="n">Request</span><span class="p">,</span> <span class="n">urlopen</span>

<span class="n">values</span> <span class="o">=</span> <span class="s">"""
{
    "media_urls": [
        "https://i.ganjoor.net/a2/41417.mp3"
    ],
    "wait": false
}
"""</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'application/json'</span><span class="p">,</span><span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Token TOKEN_KEY'</span><span class="p">,</span>
<span class="p">}</span>
<span class="n">request</span> <span class="o">=</span> <span class="n">Request</span><span class="p">(</span><span class="s">'http://harf.roshan-ai.ir/api/transcribe_files/'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">values</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="n">response_body</span> <span class="o">=</span> <span class="n">urlopen</span><span class="p">(</span><span class="n">request</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">response_body</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight java tab-java"><code><span class="kn">import</span> <span class="nn">java.lang.System</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.HttpURLConnection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.charset.StandardCharsets</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URLConnection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">MyRequest</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="no">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="o">);</span>
            <span class="nc">URLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
            <span class="nc">HttpURLConnection</span> <span class="n">http</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span><span class="n">con</span><span class="o">;</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"POST"</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setDoOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

            <span class="kt">byte</span><span class="o">[]</span> <span class="n">out</span> <span class="o">=</span> <span class="s">"{
    "</span><span class="n">media_urls</span><span class="s">": [
        "</span><span class="nl">https:</span><span class="c1">//i.ganjoor.net/a2/41417.mp3"</span>
    <span class="o">],</span>
    <span class="s">"wait"</span><span class="o">:</span> <span class="kc">false</span>
<span class="o">}</span><span class="s">".getBytes(StandardCharsets.UTF_8);
            int length = out.length;

            http.setFixedLengthStreamingMode(length);
            http.setRequestProperty("</span><span class="nc">Content</span><span class="o">-</span><span class="nc">Type</span><span class="s">", "</span><span class="n">application</span><span class="o">/</span><span class="n">json</span><span class="s">");
            http.setRequestProperty("</span><span class="nc">Authorization</span><span class="s">", "</span><span class="nc">Token</span> <span class="no">TOKEN_KEY</span><span class="err">"</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
            <span class="k">try</span><span class="o">(</span><span class="nc">OutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="n">http</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">out</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="n">http</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
            <span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
            <span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
            <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>

  <span class="nv">$url</span> <span class="o">=</span> <span class="s2">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="p">;</span>
  <span class="nv">$content</span> <span class="o">=</span> <span class="nb">json_encode</span><span class="p">(</span>
      <span class="s1">'{
    "media_urls": [
        "https://i.ganjoor.net/a2/41417.mp3"
    ],
    "wait": false
}'</span><span class="p">);</span>
  <span class="nv">$curl</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">(</span><span class="nv">$url</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_HEADER</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_HTTPHEADER</span><span class="p">,</span>
          <span class="k">array</span><span class="p">(</span>
              <span class="s2">"Content-Type: application/json"</span><span class="p">,</span>
              <span class="s2">"Authorization: Token TOKEN_KEY"</span><span class="p">,</span>
              <span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_POST</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nv">$content</span><span class="p">);</span>

  <span class="nv">$json_response</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

  <span class="nv">$status</span> <span class="o">=</span> <span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLINFO_HTTP_CODE</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(</span> <span class="nv">$status</span> <span class="o">!=</span> <span class="mi">200</span> <span class="p">)</span> <span class="p">{</span>
      <span class="k">die</span><span class="p">(</span><span class="s2">"Error: call to URL </span><span class="nv">$url</span><span class="s2"> failed with status </span><span class="nv">$status</span><span class="s2">, response </span><span class="nv">$json_response</span><span class="s2">, curl_error "</span> <span class="mf">.</span> <span class="nb">curl_error</span><span class="p">(</span><span class="nv">$curl</span><span class="p">)</span> <span class="mf">.</span> <span class="s2">", curl_errno "</span> <span class="mf">.</span> <span class="nb">curl_errno</span><span class="p">(</span><span class="nv">$curl</span><span class="p">));</span>
  <span class="p">}</span>


  <span class="nb">curl_close</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

  <span class="nv">$response</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$json_response</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div><div class="highlight"><pre class="highlight csharp tab-csharp"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MyRequest</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">Program</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">httpWebRequest</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebRequest</span><span class="p">)</span><span class="n">WebRequest</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="p">);</span>
            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">"Content-Type"</span><span class="p">]=</span> <span class="s">"application/json"</span><span class="p">;</span>
            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">"Authorization"</span><span class="p">]=</span> <span class="s">"Token TOKEN_KEY"</span><span class="p">;</span>

            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="s">"POST"</span><span class="p">;</span>

            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">streamWriter</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamWriter</span><span class="p">(</span><span class="n">httpWebRequest</span><span class="p">.</span><span class="nf">GetRequestStream</span><span class="p">()))</span>
            <span class="p">{</span>
                <span class="kt">string</span> <span class="n">json</span> <span class="p">=</span> <span class="s">"{
</span>    <span class="s">"media_urls"</span><span class="p">:</span> <span class="p">[</span>
        <span class="s">"https://i.ganjoor.net/a2/41417.mp3"</span>
    <span class="p">],</span>
    <span class="s">"wait"</span><span class="p">:</span> <span class="k">false</span>
<span class="p">}</span><span class="s">";
</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">json</span><span class="p">);</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Flush</span><span class="p">();</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Close</span><span class="p">();</span>
            <span class="p">}</span>

            <span class="kt">var</span> <span class="n">httpResponse</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">httpWebRequest</span><span class="p">.</span><span class="nf">GetResponse</span><span class="p">();</span>
            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">streamReader</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">httpResponse</span><span class="p">.</span><span class="nf">GetResponseStream</span><span class="p">()))</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="n">streamReader</span><span class="p">.</span><span class="nf">ReadToEnd</span><span class="p">();</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">result</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Response </p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"state"</span><span class="p">:</span><span class="s2">"PENDING"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"task_ids"</span><span class="p">:[</span><span class="s2">"..."</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">

</span></code></pre></div>
<p>پس از ارسال درخواست تحلیل ناهمگام، نتیجه تحلیل با استفاده از <code>task_ids</code> قابل پیگیری است. در صورتی که تحلیل فایل انجام شده باشد، تقاضای پیگیری با نتیجه تحلیل، پاسخ داده می‌شود و در غیر این صورت، وضعیت تحلیل در پاسخ قرار داده می‌شود.</p>

<p><code>POST /api/transcribe_files/</code></p>

<dl>
<strong>media_urls(required)</strong>
<br>
<br>
Value: <span style="background-color: #00A693;
                    border-color: #00A693;
                    border-width: 3px;
                    border-radius: 2px">
                    List of URLs
                    </span>
</dl>

<p style="direction:rtl;font-weight:300;">
<img src="./images/vector.svg" alt="vector">  لیست آدرس فایل‌های ورودی</p>

<p><br><br>
<dl>
<strong>wait</strong>
<br>
<br>
Value: <span style="background-color: #00A693;
                    border-color: #00A693;
                    border-width: 3px;
                    border-radius: 2px">
                    true
                    </span>
</dl></p>

<p style="direction:rtl;font-weight:300;">
<img src="./images/vector.svg" alt="vector">  اگر این ویژگی فعال باشد، کاربر منتظر می‌ماند تا نتیجه تحلیل آماده شود؛ در غیر این صورت، تقاضای تحلیل دریافت می‌شود و کاربر با استفاده از واسط «وضعیت سند» از میزان پیشرفت تحلیل مطلع می‌شود. به این ترتیب پس از پایان پردازش، تقاضای جدیدی برای پردازش سند ارسال می‌شود و این بار تقاضا با نتیجه مناسب پاسخ داده می‌شود.</p>

<p><br><br></p>
<h2 id='427ca47f6d'>نمونه دریافت پاسخ درخواست ناهمگام</h2>
<blockquote>
<p>Request</p>
</blockquote>
<div class="highlight"><pre class="highlight plaintext tab-plaintext"><code>{
    "tasks_ids": [
        "..."
    ],
    "wait": false
}
</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>curl  <span class="nt">--request</span> POST <span class="se">\ </span>
      <span class="nt">--header</span> <span class="s2">"Content-Type: application/json"</span> <span class="nt">--header</span> <span class="s2">"Authorization: Token TOKEN_KEY"</span> <span class="se">\</span>
      <span class="nt">--data-binary</span> <span class="o">{</span>
    <span class="s2">"tasks_ids"</span>: <span class="o">[</span>
        <span class="s2">"..."</span>
    <span class="o">]</span>,
    <span class="s2">"wait"</span>: <span class="nb">false</span>
<span class="o">}</span> <span class="se">\</span>
      http://harf.roshan-ai.ir/api/transcribe_files/
</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">from</span> <span class="nn">urllib2</span> <span class="kn">import</span> <span class="n">Request</span><span class="p">,</span> <span class="n">urlopen</span>

<span class="n">values</span> <span class="o">=</span> <span class="s">"""
{
    "tasks_ids": [
        "..."
    ],
    "wait": false
}
"""</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'application/json'</span><span class="p">,</span><span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Token TOKEN_KEY'</span><span class="p">,</span>
<span class="p">}</span>
<span class="n">request</span> <span class="o">=</span> <span class="n">Request</span><span class="p">(</span><span class="s">'http://harf.roshan-ai.ir/api/transcribe_files/'</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">values</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="n">response_body</span> <span class="o">=</span> <span class="n">urlopen</span><span class="p">(</span><span class="n">request</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">response_body</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre class="highlight java tab-java"><code><span class="kn">import</span> <span class="nn">java.lang.System</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.HttpURLConnection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.charset.StandardCharsets</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URLConnection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">MyRequest</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="no">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="o">);</span>
            <span class="nc">URLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
            <span class="nc">HttpURLConnection</span> <span class="n">http</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span><span class="n">con</span><span class="o">;</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"POST"</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setDoOutput</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

            <span class="kt">byte</span><span class="o">[]</span> <span class="n">out</span> <span class="o">=</span> <span class="s">"{
    "</span><span class="n">tasks_ids</span><span class="s">": [
        "</span><span class="o">...</span><span class="s">"
    ],
    "</span><span class="n">wait</span><span class="s">": false
}"</span><span class="o">.</span><span class="na">getBytes</span><span class="o">(</span><span class="nc">StandardCharsets</span><span class="o">.</span><span class="na">UTF_8</span><span class="o">);</span>
            <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">out</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>

            <span class="n">http</span><span class="o">.</span><span class="na">setFixedLengthStreamingMode</span><span class="o">(</span><span class="n">length</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">setRequestProperty</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"Token TOKEN_KEY"</span><span class="o">);</span>
            <span class="n">http</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
            <span class="k">try</span><span class="o">(</span><span class="nc">OutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="n">http</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">os</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">out</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="n">http</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
            <span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
            <span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
            <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="cp">&lt;?php</span>

  <span class="nv">$url</span> <span class="o">=</span> <span class="s2">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="p">;</span>
  <span class="nv">$content</span> <span class="o">=</span> <span class="nb">json_encode</span><span class="p">(</span>
      <span class="s1">'{
    "tasks_ids": [
        "..."
    ],
    "wait": false
}'</span><span class="p">);</span>
  <span class="nv">$curl</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">(</span><span class="nv">$url</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_HEADER</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_HTTPHEADER</span><span class="p">,</span>
          <span class="k">array</span><span class="p">(</span>
              <span class="s2">"Content-Type: application/json"</span><span class="p">,</span>
              <span class="s2">"Authorization: Token TOKEN_KEY"</span><span class="p">,</span>
              <span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_POST</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
  <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nv">$content</span><span class="p">);</span>

  <span class="nv">$json_response</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

  <span class="nv">$status</span> <span class="o">=</span> <span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="no">CURLINFO_HTTP_CODE</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(</span> <span class="nv">$status</span> <span class="o">!=</span> <span class="mi">200</span> <span class="p">)</span> <span class="p">{</span>
      <span class="k">die</span><span class="p">(</span><span class="s2">"Error: call to URL </span><span class="nv">$url</span><span class="s2"> failed with status </span><span class="nv">$status</span><span class="s2">, response </span><span class="nv">$json_response</span><span class="s2">, curl_error "</span> <span class="mf">.</span> <span class="nb">curl_error</span><span class="p">(</span><span class="nv">$curl</span><span class="p">)</span> <span class="mf">.</span> <span class="s2">", curl_errno "</span> <span class="mf">.</span> <span class="nb">curl_errno</span><span class="p">(</span><span class="nv">$curl</span><span class="p">));</span>
  <span class="p">}</span>


  <span class="nb">curl_close</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>

  <span class="nv">$response</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$json_response</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
<span class="cp">?&gt;</span>
</code></pre></div><div class="highlight"><pre class="highlight csharp tab-csharp"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.IO</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Net</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">MyRequest</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">Program</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">httpWebRequest</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebRequest</span><span class="p">)</span><span class="n">WebRequest</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"http://harf.roshan-ai.ir/api/transcribe_files/"</span><span class="p">);</span>
            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">"Content-Type"</span><span class="p">]=</span> <span class="s">"application/json"</span><span class="p">;</span>
            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Headers</span><span class="p">[</span><span class="s">"Authorization"</span><span class="p">]=</span> <span class="s">"Token TOKEN_KEY"</span><span class="p">;</span>

            <span class="n">httpWebRequest</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="s">"POST"</span><span class="p">;</span>

            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">streamWriter</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamWriter</span><span class="p">(</span><span class="n">httpWebRequest</span><span class="p">.</span><span class="nf">GetRequestStream</span><span class="p">()))</span>
            <span class="p">{</span>
                <span class="kt">string</span> <span class="n">json</span> <span class="p">=</span> <span class="s">"{
</span>    <span class="s">"tasks_ids"</span><span class="p">:</span> <span class="p">[</span>
        <span class="s">"..."</span>
    <span class="p">],</span>
    <span class="s">"wait"</span><span class="p">:</span> <span class="k">false</span>
<span class="p">}</span><span class="s">";
</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">json</span><span class="p">);</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Flush</span><span class="p">();</span>
                <span class="n">streamWriter</span><span class="p">.</span><span class="nf">Close</span><span class="p">();</span>
            <span class="p">}</span>

            <span class="kt">var</span> <span class="n">httpResponse</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">httpWebRequest</span><span class="p">.</span><span class="nf">GetResponse</span><span class="p">();</span>
            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">streamReader</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">httpResponse</span><span class="p">.</span><span class="nf">GetResponseStream</span><span class="p">()))</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">result</span> <span class="p">=</span> <span class="n">streamReader</span><span class="p">.</span><span class="nf">ReadToEnd</span><span class="p">();</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">result</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>
<blockquote>
<p>Response </p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="nl">"state"</span><span class="p">:</span><span class="s2">"PENDING"</span><span class="p">}</span><span class="w">

</span></code></pre></div>
<p>در صورتی که فایل هنوز در حال پردازش باشد، وضعیت <code>PENDING</code> به عنوان پاسخ باز می‌گردد. اگر در تحلیل فایل مشکلی پیش آماده باشد وضعیت <code>FAILURE</code> گزارش می‌شود و اگر تحلیل فایل بیش از مقدار تعیین شده برای حداکثر زمان تحلیل (در تنظیمات داخلی سیستم) طول بکشد، وضعیت <code>TIMEOUT</code> اعلام می‌شود.</p>

<p><code>POST /api/transcribe_files/</code></p>

<dl>
<strong>task_ids(required)</strong>
<br>
<br>
Value: <span style="background-color: #00A693;
                    border-color: #00A693;
                    border-width: 3px;
                    border-radius: 2px">
                    List of task ids
                    </span>
</dl>

<p style="direction:rtl;font-weight:300;">
<img src="./images/vector.svg" alt="vector">  لیست شناسه درخواست‌ها</p>

<p><br><br>
<dl>
<strong>wait</strong>
<br>
<br>
Value: <span style="background-color: #00A693;
                    border-color: #00A693;
                    border-width: 3px;
                    border-radius: 2px">
                    true
                    </span>
</dl></p>

<p style="direction:rtl;font-weight:300;">
<img src="./images/vector.svg" alt="vector">  اگر این ویژگی فعال باشد، کاربر منتظر می‌ماند تا نتیجه تحلیل آماده شود؛ در غیر این صورت، تقاضای تحلیل دریافت می‌شود و کاربر با استفاده از واسط «وضعیت سند» از میزان پیشرفت تحلیل مطلع می‌شود. به این ترتیب پس از پایان پردازش، تقاضای جدیدی برای پردازش سند ارسال می‌شود و این بار تقاضا با نتیجه مناسب پاسخ داده می‌شود.</p>

<p><br><br></p>
<h1 id='2e6a25572c'>پیاده‌سازی متن فایل در جریان</h1>
<table>
    <tr>
        <th>
            title
        </th>
        <th>
            description
        </th>
        <th>
            key
        </th>
        <th>
            value
        </th>
        <th>
            required
        </th>
    </tr></table>

<p>برای پیاده‌سازی متن فایل در جریان، نیاز به برقراری ارتباط از طریق WebSocket است. به این ترتیب پس از برقراری ارتباط، فایل در قالب wav به صورت باینری برای سرور ارسال می‌شود.</p>

<p>{&quot;segment_id&quot;: 1, &quot;text&quot;: &quot;سازمان بهداشت جهانی&quot;, &quot;start&quot;: &quot;0:00:00&quot;, &quot;end&quot;: &quot;0:00:05&quot;}</p>

<p>در صورت آماده نبودن جواب پاسخ در قالب زیر ارسال میشود.</p>

<p>{&quot;state&quot;: &quot;PENDING&quot;}</p>

<p>در انتها برای سرور متن &quot;finalize&quot; .به منظور انتهای فرآیند برای سرور ارسال میشود و آخرین نتیجه تحلیل ارسال میشود.</p>
<h2 id='8e687366d5'>نمونه</h2>
<blockquote>
<p>Request</p>
</blockquote>
<div class="highlight"><pre class="highlight plaintext tab-plaintext"><code>from websocket import create_connection                                              
headers = {'Authorization' : 'Token ...'}
ws = create_connection("wss://harf.roshan-ai.ir/ws_api/transcribe_files/wav/sync/", headers=headers)
with open('sample.wav' ,'rb') as f:
    bs=f.read()
window_size = 32000
number_of_window = (len(bs) + 1) // window_size
for i in range(number_of_window):
    ws.send_binary(bs[window_size*i:window_size*(i+1)])
    data = ws.recv()
ws.send("finalize")
data= ws.recv()
ws.close()

</code></pre></div><div class="highlight"><pre class="highlight shell tab-shell"><code>from websocket import create_connection                                              
headers <span class="o">=</span> <span class="o">{</span><span class="s1">'Authorization'</span> : <span class="s1">'Token ...'</span><span class="o">}</span>
ws <span class="o">=</span> create_connection<span class="o">(</span><span class="s2">"wss://harf.roshan-ai.ir/ws_api/transcribe_files/wav/sync/"</span>, <span class="nv">headers</span><span class="o">=</span>headers<span class="o">)</span>
with open<span class="o">(</span><span class="s1">'sample.wav'</span> ,<span class="s1">'rb'</span><span class="o">)</span> as f:
    <span class="nv">bs</span><span class="o">=</span>f.read<span class="o">()</span>
window_size <span class="o">=</span> 32000
number_of_window <span class="o">=</span> <span class="o">(</span>len<span class="o">(</span>bs<span class="o">)</span> + 1<span class="o">)</span> // window_size
<span class="k">for </span>i <span class="k">in </span>range<span class="o">(</span>number_of_window<span class="o">)</span>:
    ws.send_binary<span class="o">(</span>bs[window_size<span class="k">*</span>i:window_size<span class="k">*</span><span class="o">(</span>i+1<span class="o">)])</span>
    data <span class="o">=</span> ws.recv<span class="o">()</span>
ws.send<span class="o">(</span><span class="s2">"finalize"</span><span class="o">)</span>
<span class="nv">data</span><span class="o">=</span> ws.recv<span class="o">()</span>
ws.close<span class="o">()</span>

</code></pre></div><div class="highlight"><pre class="highlight python tab-python"><code><span class="kn">from</span> <span class="nn">websocket</span> <span class="kn">import</span> <span class="n">create_connection</span>                                              
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Authorization'</span> <span class="p">:</span> <span class="s">'Token ...'</span><span class="p">}</span>
<span class="n">ws</span> <span class="o">=</span> <span class="n">create_connection</span><span class="p">(</span><span class="s">"wss://harf.roshan-ai.ir/ws_api/transcribe_files/wav/sync/"</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'sample.wav'</span> <span class="p">,</span><span class="s">'rb'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">bs</span><span class="o">=</span><span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
<span class="n">window_size</span> <span class="o">=</span> <span class="mi">32000</span>
<span class="n">number_of_window</span> <span class="o">=</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bs</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">window_size</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">number_of_window</span><span class="p">):</span>
    <span class="n">ws</span><span class="p">.</span><span class="n">send_binary</span><span class="p">(</span><span class="n">bs</span><span class="p">[</span><span class="n">window_size</span><span class="o">*</span><span class="n">i</span><span class="p">:</span><span class="n">window_size</span><span class="o">*</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)])</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">ws</span><span class="p">.</span><span class="n">recv</span><span class="p">()</span>
<span class="n">ws</span><span class="p">.</span><span class="n">send</span><span class="p">(</span><span class="s">"finalize"</span><span class="p">)</span>
<span class="n">data</span><span class="o">=</span> <span class="n">ws</span><span class="p">.</span><span class="n">recv</span><span class="p">()</span>
<span class="n">ws</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>

</code></pre></div><div class="highlight"><pre class="highlight java tab-java"><code><span class="n">from</span> <span class="n">websocket</span> <span class="kn">import</span> <span class="nn">create_connection</span>                                              
<span class="n">headers</span> <span class="o">=</span> <span class="o">{</span><span class="err">'</span><span class="nc">Authorization</span><span class="err">'</span> <span class="o">:</span> <span class="err">'</span><span class="nc">Token</span> <span class="o">...</span><span class="err">'</span><span class="o">}</span>
<span class="n">ws</span> <span class="o">=</span> <span class="n">create_connection</span><span class="o">(</span><span class="s">"wss://harf.roshan-ai.ir/ws_api/transcribe_files/wav/sync/"</span><span class="o">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="o">)</span>
<span class="n">with</span> <span class="nf">open</span><span class="o">(</span><span class="err">'</span><span class="n">sample</span><span class="o">.</span><span class="na">wav</span><span class="err">'</span> <span class="o">,</span><span class="err">'</span><span class="n">rb</span><span class="err">'</span><span class="o">)</span> <span class="n">as</span> <span class="nl">f:</span>
    <span class="n">bs</span><span class="o">=</span><span class="n">f</span><span class="o">.</span><span class="na">read</span><span class="o">()</span>
<span class="n">window_size</span> <span class="o">=</span> <span class="mi">32000</span>
<span class="n">number_of_window</span> <span class="o">=</span> <span class="o">(</span><span class="n">len</span><span class="o">(</span><span class="n">bs</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">)</span> <span class="c1">// window_size</span>
<span class="k">for</span> <span class="n">i</span> <span class="n">in</span> <span class="nf">range</span><span class="o">(</span><span class="n">number_of_window</span><span class="o">):</span>
    <span class="n">ws</span><span class="o">.</span><span class="na">send_binary</span><span class="o">(</span><span class="n">bs</span><span class="o">[</span><span class="n">window_size</span><span class="o">*</span><span class="nl">i:</span><span class="n">window_size</span><span class="o">*(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)])</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">ws</span><span class="o">.</span><span class="na">recv</span><span class="o">()</span>
<span class="n">ws</span><span class="o">.</span><span class="na">send</span><span class="o">(</span><span class="s">"finalize"</span><span class="o">)</span>
<span class="n">data</span><span class="o">=</span> <span class="n">ws</span><span class="o">.</span><span class="na">recv</span><span class="o">()</span>
<span class="n">ws</span><span class="o">.</span><span class="na">close</span><span class="o">()</span>

</code></pre></div><div class="highlight"><pre class="highlight php tab-php"><code><span class="n">from</span> <span class="n">websocket</span> <span class="n">import</span> <span class="n">create_connection</span>                                              
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'Authorization'</span> <span class="o">:</span> <span class="s1">'Token ...'</span><span class="p">}</span>
<span class="n">ws</span> <span class="o">=</span> <span class="nf">create_connection</span><span class="p">(</span><span class="s2">"wss://harf.roshan-ai.ir/ws_api/transcribe_files/wav/sync/"</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
<span class="n">with</span> <span class="nf">open</span><span class="p">(</span><span class="s1">'sample.wav'</span> <span class="p">,</span><span class="s1">'rb'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="o">:</span>
    <span class="n">bs</span><span class="o">=</span><span class="n">f</span><span class="mf">.</span><span class="nf">read</span><span class="p">()</span>
<span class="n">window_size</span> <span class="o">=</span> <span class="mi">32000</span>
<span class="n">number_of_window</span> <span class="o">=</span> <span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">bs</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="c1">// window_size</span>
<span class="k">for</span> <span class="n">i</span> <span class="n">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">number_of_window</span><span class="p">)</span><span class="o">:</span>
    <span class="n">ws</span><span class="mf">.</span><span class="nf">send_binary</span><span class="p">(</span><span class="n">bs</span><span class="p">[</span><span class="n">window_size</span><span class="o">*</span><span class="n">i</span><span class="o">:</span><span class="n">window_size</span><span class="o">*</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)])</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">ws</span><span class="mf">.</span><span class="nf">recv</span><span class="p">()</span>
<span class="n">ws</span><span class="mf">.</span><span class="nf">send</span><span class="p">(</span><span class="s2">"finalize"</span><span class="p">)</span>
<span class="n">data</span><span class="o">=</span> <span class="n">ws</span><span class="mf">.</span><span class="nf">recv</span><span class="p">()</span>
<span class="n">ws</span><span class="mf">.</span><span class="nf">close</span><span class="p">()</span>

</code></pre></div><div class="highlight"><pre class="highlight csharp tab-csharp"><code><span class="k">from</span> <span class="n">websocket</span> <span class="n">import</span> <span class="n">create_connection</span>                                              
<span class="n">headers</span> <span class="p">=</span> <span class="p">{</span><span class="err">'</span><span class="n">Authorization</span><span class="err">'</span> <span class="p">:</span> <span class="err">'</span><span class="n">Token</span> <span class="p">...</span><span class="err">'</span><span class="p">}</span>
<span class="n">ws</span> <span class="p">=</span> <span class="nf">create_connection</span><span class="p">(</span><span class="s">"wss://harf.roshan-ai.ir/ws_api/transcribe_files/wav/sync/"</span><span class="p">,</span> <span class="n">headers</span><span class="p">=</span><span class="n">headers</span><span class="p">)</span>
<span class="n">with</span> <span class="nf">open</span><span class="p">(</span><span class="err">'</span><span class="n">sample</span><span class="p">.</span><span class="n">wav</span><span class="err">'</span> <span class="p">,</span><span class="err">'</span><span class="n">rb</span><span class="err">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">bs</span><span class="p">=</span><span class="n">f</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
<span class="n">window_size</span> <span class="p">=</span> <span class="m">32000</span>
<span class="n">number_of_window</span> <span class="p">=</span> <span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">bs</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// window_size</span>
<span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">number_of_window</span><span class="p">):</span>
    <span class="n">ws</span><span class="p">.</span><span class="nf">send_binary</span><span class="p">(</span><span class="n">bs</span><span class="p">[</span><span class="n">window_size</span><span class="p">*</span><span class="n">i</span><span class="p">:</span><span class="n">window_size</span><span class="p">*(</span><span class="n">i</span><span class="p">+</span><span class="m">1</span><span class="p">)])</span>
    <span class="n">data</span> <span class="p">=</span> <span class="n">ws</span><span class="p">.</span><span class="nf">recv</span><span class="p">()</span>
<span class="n">ws</span><span class="p">.</span><span class="nf">send</span><span class="p">(</span><span class="s">"finalize"</span><span class="p">)</span>
<span class="n">data</span><span class="p">=</span> <span class="n">ws</span><span class="p">.</span><span class="nf">recv</span><span class="p">()</span>
<span class="n">ws</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>

</code></pre></div>
<blockquote>
<p>Response </p>
</blockquote>
<div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="nl">"state"</span><span class="p">:</span><span class="s2">"PENDING"</span><span class="p">}</span><span class="w">

</span></code></pre></div>
<p><code>POST /ws_api/transcribe_files/wav/sync/</code></p>
